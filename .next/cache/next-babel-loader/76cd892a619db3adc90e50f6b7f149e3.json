{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n//import Link from \"next/link\";\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastListWithClick from '../components/PodcastListWithClick';\nimport Error from './_error';\nimport PodcastPlayer from '../components/PodcastPlayer';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"openPodcast\", function (event, podcast) {\n      event.preventDefault();\n\n      _this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    _this.state = {\n      openPodcast: null\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          canal = _this$props.canal,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series,\n          statusCode = _this$props.statusCode;\n      var openPodcast = this.state.openPodcast;\n\n      if (statusCode !== 200) {\n        return __jsx(Error, {\n          statusCode: statusCode\n        });\n      }\n\n      return __jsx(Layout, {\n        title: canal.title\n      }, openPodcast && __jsx(\"div\", {\n        className: \"jsx-3530794542\" + \" \" + \"modal\"\n      }, \"Hay un podcast abierto\"), __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(canal.urls.banner_image.original, \")\")\n        },\n        className: \"jsx-3530794542\" + \" \" + \"banner\"\n      }), __jsx(\"h1\", {\n        className: \"jsx-3530794542\"\n      }, canal.title), series.length > 0 && __jsx(\"div\", {\n        className: \"jsx-3530794542\"\n      }, __jsx(\"h2\", {\n        className: \"jsx-3530794542\"\n      }, \"Series\"), __jsx(ChannelGrid, {\n        channels: series\n      })), __jsx(\"h2\", {\n        className: \"jsx-3530794542\"\n      }, \"Ultimos Podcasts\"), __jsx(PodcastListWithClick, {\n        podcasts: audioClips,\n        onClickPodcast: this.openPodcast\n      }), __jsx(_JSXStyle, {\n        id: \"3530794542\"\n      }, \".banner.jsx-3530794542{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}h1.jsx-3530794542{font-weight:600;padding:15px;}h2.jsx-3530794542{padding:15px;font-size:1.2em;font-weight:600;margin:0;}.modal.jsx-3530794542{position:fixed;top:0;left:0;right:0;bottom:0;background:black;z-index:99999;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQW5kcsOpc1xcRGVza3RvcFxcYXBsaWNhY2lvbmVzXFxwbGF0emlcXHJlYWN0LmpzXFxwb2RjYXN0XFxwYWdlc1xcY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnR2tCLEFBR3NCLEFBT0ssQUFJSCxBQU1JLFdBaEJFLEVBV0gsRUFNUixDQVZLLEtBV0osT0FDQyxDQVhaLEFBSWtCLENBWFksTUFtQmpCLFNBUEYsQUFRVSxTQVByQixJQVp3QixJQW9CTixjQUNsQixJQXBCd0Isc0JBQ3hCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcQW5kcsOpc1xcRGVza3RvcFxcYXBsaWNhY2lvbmVzXFxwbGF0emlcXHJlYWN0LmpzXFxwb2RjYXN0XFxwYWdlc1xcY2hhbm5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xyXG5cclxuaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJztcclxuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCc7XHJcbmltcG9ydCBDaGFubmVsR3JpZCBmcm9tICcuLi9jb21wb25lbnRzL0NoYW5uZWxHcmlkJztcclxuaW1wb3J0IFBvZGNhc3RMaXN0V2l0aENsaWNrIGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdExpc3RXaXRoQ2xpY2snO1xyXG5pbXBvcnQgRXJyb3IgZnJvbSAnLi9fZXJyb3InO1xyXG5pbXBvcnQgUG9kY2FzdFBsYXllciBmcm9tICcuLi9jb21wb25lbnRzL1BvZGNhc3RQbGF5ZXInO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgICAgICBzdXBlcihwcm9wcylcclxuICAgICAgICB0aGlzLnN0YXRlID0geyBvcGVuUG9kY2FzdDogbnVsbH1cclxuICAgIH1cclxuXHJcbnN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoe3F1ZXJ5LCByZXN9KXtcclxuICAgIGxldCBpZENoYW5uZWwgPSBxdWVyeS5pZDtcclxuXHJcbiAgICB0cnkge1xyXG5cclxuICAgICAgICBsZXQgW3JlcUNoYW5uZWwsIHJlcVNlcmllcywgcmVxQXVkaW9dID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcclxuICAgICAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2NoaWxkX2NoYW5uZWxzYCksXHJcbiAgICAgICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2ApXHJcbiAgICAgICAgXSlcclxuICAgIFxyXG5cclxuICAgICAgICBpZiAocmVxQ2hhbm5lbC5zdGF0dXMgPj0gNDAwKSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXM7XHJcbiAgICAgICAgICAgIHJldHVybiB7Y2FuYWw6IG51bGwsIGF1ZGlvQ2xpcHM6IG51bGwsIHNlcmllczogbnVsbCxcclxuICAgICAgICAgICAgICAgIHN0YXR1c0NvZGU6IHJlcUNoYW5uZWwuc3RhdHVzfVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIC8vbGV0IHJlcUNoYW5uZWwgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKTtcclxuICAgICAgICBsZXQgZGF0YUNoYW5uZWwgPSAgYXdhaXQgcmVxQ2hhbm5lbC5qc29uKCk7XHJcbiAgICAgICAgbGV0IGNhbmFsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsO1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgXHJcbiAgICAgICAgLy9sZXQgcmVxQXVkaW8gPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKTtcclxuICAgICAgICBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvLmpzb24oKTtcclxuICAgICAgICBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwcztcclxuICAgIFxyXG4gICAgICAgIC8vbGV0IHJlcVNlcmllcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2ApO1xyXG4gICAgICAgIGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKTtcclxuICAgICAgICBsZXQgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzO1xyXG4gICAgXHJcbiAgICAgICAgcmV0dXJuIHtjYW5hbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlOiAyMDB9XHJcbiAgICAgICAgXHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgcmV0dXJuIHtjYW5hbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLFxyXG4gICAgICAgIHN0YXR1c0NvZGU6IDUwM31cclxuICAgIH1cclxuXHJcbiAgICBcclxufVxyXG5cclxuICAgIG9wZW5Qb2RjYXN0ID0gKGV2ZW50LCBwb2RjYXN0KSA9PiB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgb3BlblBvZGNhc3Q6IHBvZGNhc3RcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpe1xyXG4gICAgICAgIGNvbnN0IHsgY2FuYWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZX09IHRoaXMucHJvcHM7XHJcbiAgICAgICAgY29uc3QgeyBvcGVuUG9kY2FzdCB9ID0gdGhpcy5zdGF0ZTtcclxuXHJcbiAgICAgICAgaWYgKCBzdGF0dXNDb2RlICE9PSAyMDAgKSB7XHJcbiAgICAgICAgICAgIHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz5cclxuICAgICAgICB9XHJcbiAgICAgIFxyXG5cclxuICAgICAgcmV0dXJuIDxMYXlvdXQgdGl0bGU9e2NhbmFsLnRpdGxlfT5cclxuXHJcbiAgICAgIHsgb3BlblBvZGNhc3QgJiYgXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWxcIj5IYXkgdW4gcG9kY2FzdCBhYmllcnRvPC9kaXY+XHJcbiAgICAgICAgXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFubmVyXCIgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7Y2FuYWwudXJscy5iYW5uZXJfaW1hZ2Uub3JpZ2luYWx9KWAgfX0gLz5cclxuICAgICAgXHJcbiAgICAgIDxoMT57IGNhbmFsLnRpdGxlIH08L2gxPlxyXG5cclxuICAgICAgeyBzZXJpZXMubGVuZ3RoID4gMCAmJlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8aDI+U2VyaWVzPC9oMj5cclxuICAgICAgICAgIDxDaGFubmVsR3JpZCBjaGFubmVscz17IHNlcmllcyB9IC8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIDxoMj5VbHRpbW9zIFBvZGNhc3RzPC9oMj5cclxuICAgICAgPFBvZGNhc3RMaXN0V2l0aENsaWNrIHBvZGNhc3RzPXsgYXVkaW9DbGlwcyB9IG9uQ2xpY2tQb2RjYXN0PXsgdGhpcy5vcGVuUG9kY2FzdCB9IC8+XHJcblxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgLmJhbm5lciB7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAyNSU7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNhYWE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGgxIHtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBoMiB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxLjJlbTtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5tb2RhbCB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjaztcclxuICAgICAgICAgICAgei1pbmRleDogOTk5OTk7XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICA8L0xheW91dD5cclxuICAgICAgICAgICAgICAgIFxyXG5cclxuICAgIH1cclxufSJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Andr\\xE9s\\\\\\\\Desktop\\\\\\\\aplicaciones\\\\\\\\platzi\\\\\\\\react.js\\\\\\\\podcast\\\\\\\\pages\\\\\\\\channel.js */\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, res, idChannel, _await$Promise$all, _await$Promise$all2, reqChannel, reqSeries, reqAudio, dataChannel, canal, dataAudios, audioClips, dataSeries, series;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query, res = _ref.res;\n              idChannel = query.id;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\"))]));\n\n            case 5:\n              _await$Promise$all = _context.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 3);\n              reqChannel = _await$Promise$all2[0];\n              reqSeries = _await$Promise$all2[1];\n              reqAudio = _await$Promise$all2[2];\n\n              if (!(reqChannel.status >= 400)) {\n                _context.next = 13;\n                break;\n              }\n\n              res.statusCode = reqChannel.status;\n              return _context.abrupt(\"return\", {\n                canal: null,\n                audioClips: null,\n                series: null,\n                statusCode: reqChannel.status\n              });\n\n            case 13:\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 15:\n              dataChannel = _context.sent;\n              canal = dataChannel.body.channel; //let reqAudio = await fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`);\n\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(reqAudio.json());\n\n            case 19:\n              dataAudios = _context.sent;\n              audioClips = dataAudios.body.audio_clips; //let reqSeries = await fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`);\n\n              _context.next = 23;\n              return _regeneratorRuntime.awrap(reqSeries.json());\n\n            case 23:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                canal: canal,\n                audioClips: audioClips,\n                series: series,\n                statusCode: 200\n              });\n\n            case 28:\n              _context.prev = 28;\n              _context.t0 = _context[\"catch\"](2);\n              return _context.abrupt(\"return\", {\n                canal: null,\n                audioClips: null,\n                series: null,\n                statusCode: 503\n              });\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 28]], Promise);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/Andrés/Desktop/aplicaciones/platzi/react.js/podcast/pages/channel.js"],"names":["Layout","ChannelGrid","PodcastListWithClick","Error","PodcastPlayer","props","event","podcast","preventDefault","setState","openPodcast","state","canal","audioClips","series","statusCode","title","backgroundImage","urls","banner_image","original","length","query","res","idChannel","id","Promise","all","fetch","reqChannel","reqSeries","reqAudio","status","json","dataChannel","body","channel","dataAudios","audio_clips","dataSeries","channels","React","Component"],"mappings":"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","sourcesContent":["//import Link from \"next/link\";\r\n\r\nimport 'isomorphic-fetch';\r\nimport Layout from '../components/Layout';\r\nimport ChannelGrid from '../components/ChannelGrid';\r\nimport PodcastListWithClick from '../components/PodcastListWithClick';\r\nimport Error from './_error';\r\nimport PodcastPlayer from '../components/PodcastPlayer';\r\n\r\nexport default class extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { openPodcast: null}\r\n    }\r\n\r\nstatic async getInitialProps({query, res}){\r\n    let idChannel = query.id;\r\n\r\n    try {\r\n\r\n        let [reqChannel, reqSeries, reqAudio] = await Promise.all([\r\n            fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n            fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\r\n            fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\r\n        ])\r\n    \r\n\r\n        if (reqChannel.status >= 400) {\r\n            res.statusCode = reqChannel.status;\r\n            return {canal: null, audioClips: null, series: null,\r\n                statusCode: reqChannel.status}\r\n        }\r\n    \r\n        //let reqChannel = await fetch(`https://api.audioboom.com/channels/${idChannel}`);\r\n        let dataChannel =  await reqChannel.json();\r\n        let canal = dataChannel.body.channel;\r\n        \r\n        \r\n    \r\n        //let reqAudio = await fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`);\r\n        let dataAudios = await reqAudio.json();\r\n        let audioClips = dataAudios.body.audio_clips;\r\n    \r\n        //let reqSeries = await fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`);\r\n        let dataSeries = await reqSeries.json();\r\n        let series = dataSeries.body.channels;\r\n    \r\n        return {canal, audioClips, series, statusCode: 200}\r\n        \r\n    } catch (e) {\r\n        return {canal: null, audioClips: null, series: null,\r\n        statusCode: 503}\r\n    }\r\n\r\n    \r\n}\r\n\r\n    openPodcast = (event, podcast) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            openPodcast: podcast\r\n        })\r\n        \r\n    }\r\n\r\n    render(){\r\n        const { canal, audioClips, series, statusCode}= this.props;\r\n        const { openPodcast } = this.state;\r\n\r\n        if ( statusCode !== 200 ) {\r\n            return <Error statusCode={statusCode} />\r\n        }\r\n      \r\n\r\n      return <Layout title={canal.title}>\r\n\r\n      { openPodcast && \r\n      <div className=\"modal\">Hay un podcast abierto</div>\r\n        \r\n      }\r\n\r\n      <div className=\"banner\" style={{ backgroundImage: `url(${canal.urls.banner_image.original})` }} />\r\n      \r\n      <h1>{ canal.title }</h1>\r\n\r\n      { series.length > 0 &&\r\n        <div>\r\n          <h2>Series</h2>\r\n          <ChannelGrid channels={ series } />\r\n        </div>\r\n      }\r\n\r\n      <h2>Ultimos Podcasts</h2>\r\n      <PodcastListWithClick podcasts={ audioClips } onClickPodcast={ this.openPodcast } />\r\n\r\n      <style jsx>{`\r\n        .banner {\r\n          width: 100%;\r\n          padding-bottom: 25%;\r\n          background-position: 50% 50%;\r\n          background-size: cover;\r\n          background-color: #aaa;\r\n        }\r\n        h1 {\r\n          font-weight: 600;\r\n          padding: 15px;\r\n        }\r\n        h2 {\r\n          padding: 15px;\r\n          font-size: 1.2em;\r\n          font-weight: 600;\r\n          margin: 0;\r\n        }\r\n        .modal {\r\n            position: fixed;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            background: black;\r\n            z-index: 99999;\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n                \r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}